import React, { useState } from "react";

export default function OffenderForm() {
  const [form, setForm] = useState({
    gender: "–≠—Ä",
    evaded: 0,
  });
  const [loading, setLoading] = useState(false);

  const [households, setHouseholds] = useState([
    { full_name: "", relation: "", employer: "", address: "", phone: "" },
  ]);
  const [relatives, setRelatives] = useState([
    { full_name: "", address: "", phone: "", occupation: "" },
  ]);
  const [coOffenders, setCoOffenders] = useState([
    { clan_name: "", surname: "", given_name: "", note: "" },
  ]);
  const [damages, setDamages] = useState([
    { total_amount: "", paid_amount: "", note: "" },
  ]);

  const handleChange = (e) =>
    setForm({ ...form, [e.target.name]: e.target.value });
  const handleCheckbox = (e) =>
    setForm({ ...form, [e.target.name]: e.target.checked ? 1 : 0 });

  const addRow = (setter, list, emptyRow) => setter([...list, emptyRow]);
  const removeRow = (setter, list, index) =>
    setter(list.filter((_, i) => i !== index));
  const handleArrayChange = (setter, list, index, field, value) => {
    const updated = [...list];
    updated[index][field] = value;
    setter(updated);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);

    const payload = {
      ...form,
      households: JSON.stringify(households),
      relatives: JSON.stringify(relatives),
      co_offenders: JSON.stringify(coOffenders),
      damages: JSON.stringify(damages),
    };

    try {
      const res = await fetch("http://localhost:4000/api/offenders/full", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
      });

      if (!res.ok) throw new Error("–°–µ—Ä–≤–µ—Ä—ç—ç—Å –∞–ª–¥–∞–∞ –∏—Ä–ª—ç—ç");
      const data = await res.json();

      alert("‚úÖ –ë“Ø—Ä—Ç–≥—ç–ª –∞–º–∂–∏–ª—Ç—Ç–∞–π —Ö–∞–¥–≥–∞–ª–∞–≥–¥–ª–∞–∞!");
      if (data.id && confirm("PDF —Ç–∞—Ç–∞—Ö —É—É?")) {
        window.open(
          `http://localhost:4000/api/offenders/${data.id}/pdf`,
          "_blank"
        );
      }

      setForm({ gender: "–≠—Ä", evaded: 0 });
      setHouseholds([{ full_name: "", relation: "", employer: "", address: "", phone: "" }]);
      setRelatives([{ full_name: "", address: "", phone: "", occupation: "" }]);
      setCoOffenders([{ clan_name: "", surname: "", given_name: "", note: "" }]);
      setDamages([{ total_amount: "", paid_amount: "", note: "" }]);
    } catch (err) {
      console.error(err);
      alert("‚ö†Ô∏è –ê–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞! –°–µ—Ä–≤–µ—Ä—Ç—ç–π —Ö–æ–ª–±–æ–ª—Ç–æ–æ —à–∞–ª–≥–∞–Ω–∞ —É—É.");
    } finally {
      setLoading(false);
    }
  };

  const inputClass =
    "border border-gray-300 rounded-md px-3 py-2 text-sm w-full focus:outline-none focus:ring-2 focus:ring-indigo-400";

  return (
    <div className="bg-gray-100 p-6 rounded-xl shadow-inner">
      <div className="max-w-6xl mx-auto bg-white shadow rounded-lg p-8">
        <h2 className="text-2xl font-bold mb-6 text-center text-gray-800">
          üßæ –¢–û–†–ì–û–• –Ø–õ –®–ò–ô–¢–ì“Æ“Æ–õ–°–≠–ù<br />–Ø–õ–¢–ù–´ –î–≠–õ–ì–≠–†–≠–ù–ì“Æ–ô –ë“Æ–†–¢–ì–≠–õ (–ú–∞—è–≥—Ç –¢-1)
        </h2>

        <form onSubmit={handleSubmit} className="space-y-6">

          {/* ‚úÖ 1. “Æ–Ω–¥—Å—ç–Ω –º—ç–¥—ç—ç–ª—ç–ª */}
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <input name="clan_name" required placeholder="1. –£—Ä–≥–∏–π–Ω –æ–≤–æ–≥" onChange={handleChange} className={inputClass}/>
            <input name="surname" required placeholder="2. –û–≤–æ–≥" onChange={handleChange} className={inputClass}/>
            <input name="given_name" required placeholder="3. –ù—ç—Ä" onChange={handleChange} className={inputClass}/>
            <input name="register_no" required placeholder="4. –†–µ–≥–∏—Å—Ç—Ä–∏–π–Ω –¥—É–≥–∞–∞—Ä" onChange={handleChange} className={inputClass}/>
          </div>

          <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
            <select name="gender" onChange={handleChange} className={inputClass}>
              <option>–≠—Ä</option><option>–≠–º</option><option>–ë—É—Å–∞–¥</option>
            </select>
            <input name="main_authority" placeholder="6. “Æ–Ω–¥—Å—ç–Ω –∑–∞—Ö–∏—Ä–≥–∞–∞" onChange={handleChange} className={inputClass}/>
            <input name="birth_date" type="date" onChange={handleChange} className={inputClass}/>
            <input name="ethnicity" placeholder="8. –Ø—Å “Ø–Ω–¥—ç—Å" onChange={handleChange} className={inputClass}/>
            <input name="social_origin" placeholder="9. –ù–∏–π–≥–º–∏–π–Ω –≥–∞—Ä–∞–ª" onChange={handleChange} className={inputClass}/>
            <input name="education" placeholder="10. –ë–æ–ª–æ–≤—Å—Ä–æ–ª" onChange={handleChange} className={inputClass}/>
          </div>

          <div className="grid grid-cols-2 gap-4">
            <input name="profession" placeholder="11. –ú—ç—Ä–≥—ç–∂–∏–ª" onChange={handleChange} className={inputClass}/>
            <input name="phone" placeholder="12. –£—Ç–∞—Å" onChange={handleChange} className={inputClass}/>
          </div>

          {/* ‚úÖ 2. –û—Ä—à–∏–Ω —Å—É—É–≥–∞–∞ —Ö–∞—è–≥ */}
          <h3 className="font-semibold text-lg text-gray-700 mt-6">üè† –û—Ä—à–∏–Ω —Å—É—É—Ö —Ö–∞—è–≥</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <textarea name="address_previous" placeholder="”®–º–Ω”© –æ—Ä—à–∏–Ω —Å—É—É—Å–∞–Ω —Ö–∞—è–≥" onChange={handleChange} className={`${inputClass} h-16`}/>
            <textarea name="address_current" placeholder="–û–¥–æ–æ –æ—Ä—à–∏–Ω —Å—É—É–∂ –±—É–π —Ö–∞—è–≥" onChange={handleChange} className={`${inputClass} h-16`}/>
          </div>

          {/* ‚úÖ 3. –ê–∂–∏–ª —ç—Ä—Ö–ª—ç–ª—Ç */}
          <h3 className="font-semibold text-lg text-gray-700 mt-6">üíº –ê–∂–∏–ª —ç—Ä—Ö–ª—ç–ª—Ç</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <textarea name="work_previous" placeholder="”®–º–Ω”©—Ö –±–∞–π–≥—É—É–ª–ª–∞–≥–∞ / –∞–∂–∏–ª —ç—Ä—Ö–ª—ç–ª—Ç–∏–π–Ω –±–∞–π–¥–∞–ª" onChange={handleChange} className={`${inputClass} h-16`}/>
            <textarea name="work_current" placeholder="–û–¥–æ–æ–≥–∏–π–Ω –±–∞–π–≥—É—É–ª–ª–∞–≥–∞ / –∞–∂–∏–ª —ç—Ä—Ö–ª—ç–ª—Ç–∏–π–Ω –±–∞–π–¥–∞–ª" onChange={handleChange} className={`${inputClass} h-16`}/>
          </div>

          <textarea name="health_status" placeholder="14. –Ø–ª —ç–¥–ª—ç—Ö “Ø–µ–∏–π–Ω —ç—Ä“Ø“Ø–ª –º—ç–Ω–¥–∏–π–Ω –±–∞–π–¥–∞–ª" onChange={handleChange} className={`${inputClass} h-20`}/>
          <textarea name="household_text" placeholder="15. –ê–º –±“Ø–ª–∏–π–Ω —Ç–æ–≤—á –º—ç–¥—ç—ç–ª—ç–ª" onChange={handleChange} className={`${inputClass} h-20`}/>

          {/* ‚úÖ 4. –ê–º –±“Ø–ª–∏–π–Ω –≥–∏—à“Ø“Ø–¥ */}
          <DynamicTable
            title="üë®‚Äçüë©‚Äçüëß 15.1 –ê–º –±“Ø–ª–∏–π–Ω –≥–∏—à“Ø“Ø–¥"
            list={households}
            columns={[
              { key: "full_name", label: "–û–≤–æ–≥ –Ω—ç—Ä" },
              { key: "relation", label: "–•—ç–Ω –±–æ–ª–æ—Ö" },
              { key: "employer", label: "–ê–∂–∏–ª —ç—Ä—Ö—ç–ª–¥—ç–≥" },
              { key: "address", label: "–•–∞—è–≥" },
              { key: "phone", label: "–£—Ç–∞—Å" },
            ]}
            setter={setHouseholds}
            onChange={handleArrayChange}
            onAdd={() => addRow(setHouseholds, households, { full_name: "", relation: "", employer: "", address: "", phone: "" })}
            onRemove={(i) => removeRow(setHouseholds, households, i)}
          />

          {/* ‚úÖ 5. –¢”©—Ä”©–ª —Ç”©—Ä”©–≥—Å”©–¥ */}
          <DynamicTable
            title="ü§ù 16. –¢”©—Ä”©–ª —Ç”©—Ä”©–≥—Å”©–¥, –æ–π—Ä –¥–æ—Ç–Ω—ã —Ö“Ø–º“Ø“Ø—Å"
            list={relatives}
            columns={[
              { key: "full_name", label: "–û–≤–æ–≥ –Ω—ç—Ä" },
              { key: "address", label: "–•–∞—è–≥" },
              { key: "phone", label: "–£—Ç–∞—Å" },
              { key: "occupation", label: "–≠—Ä—Ö—ç–ª–∂ –±—É–π –∞–∂–∏–ª" },
            ]}
            setter={setRelatives}
            onChange={handleArrayChange}
            onAdd={() => addRow(setRelatives, relatives, { full_name: "", address: "", phone: "", occupation: "" })}
            onRemove={(i) => removeRow(setRelatives, relatives, i)}
          />

          {/* ‚úÖ 6. –•–æ—Ö–∏—Ä–æ–ª */}
          <DynamicTable
            title="üí∞ 17. –•–æ—Ö–∏—Ä–æ–ª –±–∞ —Ç”©–ª–±”©—Ä–∏–π–Ω –±–∞–π–¥–∞–ª"
            list={damages}
            columns={[
              { key: "total_amount", label: "–ù–∏–π—Ç —Ö–æ—Ö–∏—Ä–æ–ª (‚ÇÆ)" },
              { key: "paid_amount", label: "–¢”©–ª—Å”©–Ω –¥“Ø–Ω (‚ÇÆ)" },
              { key: "note", label: "–¢–∞–π–ª–±–∞—Ä" },
            ]}
            setter={setDamages}
            onChange={handleArrayChange}
            onAdd={() => addRow(setDamages, damages, { total_amount: "", paid_amount: "", note: "" })}
            onRemove={(i) => removeRow(setDamages, damages, i)}
          />

          {/* ‚úÖ 7. –ì—ç–º—Ç —Ö—ç—Ä—ç–≥ */}
          <h3 className="font-semibold text-lg text-gray-700 mt-6">‚öñÔ∏è –ì—ç–º—Ç —Ö—ç—Ä–≥–∏–π–Ω –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π</h3>
          <textarea name="crime_cause" placeholder="18. –ì—ç–º—Ç —Ö—ç—Ä—ç–≥ “Ø–π–ª–¥—Å—ç–Ω —à–∞–ª—Ç–≥–∞–∞–Ω" onChange={handleChange} className={`${inputClass} h-20`}/>
          <textarea name="crime_summary" placeholder="19. –•—ç—Ä–≥–∏–π–Ω —Ç–æ–≤—á —É—Ç–≥–∞" onChange={handleChange} className={`${inputClass} h-20`}/>
          <input name="previous_sentence" placeholder="20. –£—Ä—å–¥ —è–ª —à–∏–π—Ç–≥—ç–≥–¥—ç–∂ –±–∞–π—Å–∞–Ω —ç—Å—ç—Ö (–∑“Ø–π–ª –∞–Ω–≥–∏, —è–ª—ã–Ω —Ö—ç–º–∂—ç—ç)" onChange={handleChange} className={inputClass}/>
          <textarea name="main_punishment" placeholder="21. “Æ–Ω–¥—Å—ç–Ω —è–ª" onChange={handleChange} className={`${inputClass} h-20`}/>
          <label className="flex items-center gap-2">
            <input type="checkbox" name="evaded" onChange={handleCheckbox}/>
            <span>22. –Ø–ª–∞–∞—Å –∑–∞–π–ª—Å—Ö–∏–π—Å—ç–Ω</span>
          </label>

          {/* ‚úÖ 8. –•–∞–º—Ç—Ä–∞–Ω —Ö—ç—Ä—ç–≥ “Ø–π–ª–¥—ç–≥—á */}
          <DynamicTable
            title="üë• 20. –•–∞–º—Ç—Ä–∞–Ω —Ö—ç—Ä—ç–≥ “Ø–π–ª–¥—ç–≥—á"
            list={coOffenders}
            columns={[
              { key: "clan_name", label: "–£—Ä–≥–∏–π–Ω –æ–≤–æ–≥" },
              { key: "surname", label: "–û–≤–æ–≥" },
              { key: "given_name", label: "–ù—ç—Ä" },
              { key: "note", label: "–¢–∞–π–ª–±–∞—Ä" },
            ]}
            setter={setCoOffenders}
            onChange={handleArrayChange}
            onAdd={() => addRow(setCoOffenders, coOffenders, { clan_name: "", surname: "", given_name: "", note: "" })}
            onRemove={(i) => removeRow(setCoOffenders, coOffenders, i)}
          />

          {/* ‚úÖ 9. –®“Ø“Ø—Ö–∏–π–Ω —à–∏–π–¥–≤—ç—Ä */}
          <h3 className="font-semibold text-lg text-gray-700 mt-6">üèõÔ∏è 23. –®“Ø“Ø—Ö–∏–π–Ω —à–∏–π–¥–≤—ç—Ä</h3>
          <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
            <input name="court_name" placeholder="–®“Ø“Ø—Ö–∏–π–Ω –Ω—ç—Ä" onChange={handleChange} className={inputClass}/>
            <input name="decision_date" type="date" onChange={handleChange} className={inputClass}/>
            <input name="decision_no" placeholder="–®–∏–π–¥–≤—ç—Ä–∏–π–Ω –¥—É–≥–∞–∞—Ä" onChange={handleChange} className={inputClass}/>
          </div>
          <input name="criminal_article" placeholder="–≠—Ä“Ø“Ø–≥–∏–π–Ω —Ö—É—É–ª–∏–π–Ω –∑“Ø–π–ª –∞–Ω–≥–∏" onChange={handleChange} className={inputClass}/>
          <input name="fine_unit" placeholder="–¢–æ—Ä–≥—É—É–ª–∏–π–Ω –Ω—ç–≥–∂ (—Ç–æ–æ)" onChange={handleChange} className={inputClass}/>
          <input name="fine_amount_mnt" placeholder="–¢–æ—Ä–≥—É—É–ª—å (‚ÇÆ)" onChange={handleChange} className={inputClass}/>

          {/* ‚úÖ 10. –ì–∞–¥–∞–∞–¥ —Ç”©—Ä—Ö, –∑–∞–Ω —Ç”©–ª”©–≤ */}
          <h3 className="font-semibold text-lg text-gray-700 mt-6">üßç 24. –ì–∞–¥–∞–∞–¥ —Ç”©—Ä—Ö, –∑–∞–Ω —Ç”©–ª”©–≤</h3>
          <textarea name="appearance_note" placeholder="24. –ì–∞–¥–∞–∞–¥ —Ç”©—Ä—Ö, –∑–∞–Ω —Ç”©–ª”©–≤–∏–π–Ω —Ç—ç–º–¥—ç–≥–ª—ç–ª" onChange={handleChange} className={`${inputClass} h-20`}/>

          {/* ‚úÖ 11. –Ø–ª—ã–Ω ”©”©—Ä—á–ª”©–ª—Ç */}
          <h3 className="font-semibold text-lg text-gray-700 mt-6">üîÑ 25. –î–∞–≤–∂ –∑–∞–∞–ª–¥–∞—Ö / –Ø–ª—ã–Ω ”©”©—Ä—á–ª”©–ª—Ç</h3>
          <textarea name="sentence_change" placeholder="”®”©—Ä—á–ª”©–ª—Ç–∏–π–Ω —Ç—ç–º–¥—ç–≥–ª—ç–ª" onChange={handleChange} className={`${inputClass} h-20`}/>
          <input name="sentence_type" placeholder="–Ø–ª—ã–Ω —Ç”©—Ä”©–ª –∑“Ø–π–ª –∞–Ω–≥–∏" onChange={handleChange} className={inputClass}/>

          {/* ‚úÖ 12. –ë“Ø—Ä—Ç–≥—ç–ª–∏–π–Ω –º”©—á–ª”©–≥ */}
          <h3 className="font-semibold text-lg text-gray-700 mt-6">üóÇÔ∏è –ë“Ø—Ä—Ç–≥—ç–ª –Ω—ç—ç—Å—ç–Ω / —Ö–∞–∞—Å–∞–Ω –º—ç–¥—ç—ç–ª—ç–ª</h3>
          <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
            <input name="opened_date" type="date" placeholder="–ù—ç—ç—Å—ç–Ω –æ–≥–Ω–æ–æ" onChange={handleChange} className={inputClass}/>
            <input name="closed_date" type="date" placeholder="–•–∞–∞—Å–∞–Ω –æ–≥–Ω–æ–æ" onChange={handleChange} className={inputClass}/>
            <input name="executor_name" placeholder="–®–∏–π–¥–≤—ç—Ä –≥“Ø–π—Ü—ç—Ç–≥—ç–≥—á–∏–π–Ω –Ω—ç—Ä" onChange={handleChange} className={inputClass}/>
          </div>
          <textarea name="record_note" placeholder="–ë“Ø—Ä—Ç–≥—ç–ª–∏–π–Ω –Ω—ç–º—ç–ª—Ç —Ç–∞–π–ª–±–∞—Ä (–∑–∞–∞–≤–∞–ª –±–∏—à)" onChange={handleChange} className={`${inputClass} h-16`}/>

          {/* ‚úÖ Submit */}
          <div className="text-center pt-4">
            <button
              disabled={loading}
              type="submit"
              className={`px-6 py-2 rounded shadow text-white text-lg font-semibold ${
                loading ? "bg-gray-400 cursor-wait" : "bg-indigo-600 hover:bg-indigo-700"
              }`}
            >
              {loading ? "–•–∞–¥–≥–∞–ª–∂ –±–∞–π–Ω–∞..." : "üíæ –•–∞–¥–≥–∞–ª–∞—Ö"}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

function DynamicTable({ title, list, columns, onChange, onAdd, onRemove, setter }) {
  const inputClass =
    "border border-gray-300 rounded-md px-2 py-1 w-full text-sm focus:outline-none focus:ring-2 focus:ring-indigo-400";
  return (
    <div>
      <h3 className="font-semibold text-lg text-gray-700 mt-6 mb-2">{title}</h3>
      <div className="overflow-x-auto border rounded-lg">
        <table className="w-full text-sm border-collapse">
          <thead className="bg-gray-100">
            <tr>
              {columns.map((col) => (
                <th key={col.key} className="border px-2 py-1 text-left">{col.label}</th>
              ))}
              <th className="border px-2 py-1 text-center">‚úñ</th>
            </tr>
          </thead>
          <tbody>
            {list.map((row, i) => (
              <tr key={i}>
                {columns.map((col) => (
                  <td key={col.key} className="border px-1 py-1">
                    <input
                      value={row[col.key]}
                      onChange={(e) =>
                        onChange(setter, list, i, col.key, e.target.value)
                      }
                      className={inputClass}
                    />
                  </td>
                ))}
                <td className="border text-center">
                  {list.length > 1 && (
                    <button
                      type="button"
                      onClick={() => onRemove(i)}
                      className="text-red-500 font-bold"
                    >
                      ‚úñ
                    </button>
                  )}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      <button
        type="button"
        onClick={onAdd}
        className="text-blue-600 hover:text-blue-800 mt-2 font-medium text-sm"
      >
        + –ú”©—Ä –Ω—ç–º—ç—Ö
      </button>
    </div>
  );
}
